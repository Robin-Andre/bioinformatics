[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:42]: (warning) Member variable 'PllSplit::size_block_A' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:42]: (warning) Member variable 'PllSplit::size_block_B' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:42]: (warning) Member variable 'PllSplit::h_value' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:42]: (warning) Member variable 'PllSplit::entropy_value' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllPointerMap.hpp:24]: (warning) Member variable 'PllPointerMap::limit' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllPointerMap.hpp:24]: (warning) Member variable 'PllPointerMap::map_pos' is not initialized in the constructor.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/GeneralizedRFDistance.hpp:17]: (style) The class 'GeneralizedRFDistance' does not have a constructor although it has private member variables. Member variables of builtin types are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllPointerMap.hpp:9]: (performance) When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don't explicitly write them to the initialization list. You could avoid assigning 'tree_iterator' a value by passing the value to the constructor in the initialization list.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllPointerMap.hpp:25]: (performance) When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don't explicitly write them to the initialization list. You could avoid assigning 'all_splits_unique' a value by passing the value to the constructor in the initialization list.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/IntersectionCache.hpp:21]: (style) Unused private function: 'IntersectionCacheLinear::pos'
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.cpp:11]: (style) Unsigned variable 'size_block_A' can't be negative so it is unnecessary to test it.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:91]: (style) Unused private function: 'PllSplit::computeMajorIndex'
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:95]: (style) Unused private function: 'PllSplit::computeMinorIndex'
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.cpp:72]: (performance) When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don't explicitly write them to the initialization list. You could avoid assigning '_split_offsets' a value by passing the value to the constructor in the initialization list.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/CommandLineOptions.hpp:65]: (style) Variable 'out_file' is assigned a value that is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/RFDataReader.hpp:77]: (style) Unused private function: 'RAXMLReader::getRelativeDistanceFromString'
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:4219]: (error) syntax error
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_CATCH_USER' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_HAS_CPP_17' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_INTERNAL_CATCH_USER' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_SKIP_UNSUPPORTED_COMPILER_CHECK' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_THROW_USER' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration 'JSON_TRY_USER' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:1]: (information) Skipping configuration '_MSC_VER' since the value of '_MSC_VER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '_WIN32' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '__APPLE__' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:1]: (information) Skipping configuration '__GNUC__' since the value of '__GNUC__' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:1]: (information) Skipping configuration '__IBMCPP__' since the value of '__IBMCPP__' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:1]: (information) Skipping configuration '__PGI' since the value of '__PGI' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp:1]: (information) Skipping configuration '__SUNPRO_CC' since the value of '__SUNPRO_CC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '__clang__' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '__linux__' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/json/json.hpp]: (information) The configuration '__unix__' was not checked because its code equals another one.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/TestUtil.hpp:16]: (style) The scope of the variable 'major_idx' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/TestUtil.hpp:17]: (style) The scope of the variable 'minor_idx' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/IOtest.cpp:16]: (style) Variable 'splits' is assigned a value that is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/MaximumMatcherTest.cpp:126]: (style) Variable 'match_results' is assigned a value that is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/MaximumMatcherTest.cpp:127]: (style) Variable 'match' is assigned a value that is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/MaximumMatcherTest.cpp:132]: (style) Variable 'maximum' is assigned a value that is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/utils/datagen/main.cpp:163]: (portability) Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/utils/datagen/main.cpp:15]: (style) Class 'cli_option_t<unsignedlong>' has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/utils/datagen/main.cpp:15]: (style) Class 'cli_option_t<unsignedint>' has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/GeneralizedRFTest.cpp:23]: (style) The function 'SetUpTestSuite' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:91]: (style) The function 'computeMajorIndex' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllSplits.hpp:95]: (style) The function 'computeMinorIndex' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/datastructures/PllPointerMap.hpp:31]: (style) The function 'getMap' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/RFDataReader.hpp:77]: (style) The function 'getRelativeDistanceFromString' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/Converter.hpp:21]: (style) The function 'matrixToJSON' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/src/io/Converter.hpp:12]: (style) The function 'raxmlToJSON' is never used.
[/home/luise/Exelixis-Lab/bioinformatics/practical-2021/test/src/gtest/PllSplitTest.cpp:11]: (style) The function 'split_vector_eq' is never used.
